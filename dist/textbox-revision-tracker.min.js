/*! Textbox Revision Tracker - v0.1.0 - 2015-11-15
* https://github.com/jonmbake/textbox-revision-tracker
* Copyright (c) 2015 Jon Bake; Licensed MIT */
!function(a){var b=function(a,b){if(b=b||{},this.$el=a,this.revisions=[],this.undoneRevisions=[],this.diffFunction=b.diffFunction,b.autoSave){var c,d=parseInt(b.autoSave,10);a.on("change",function(){var a=Date.now();this.saveRevision((a-c)/1e3>d),c=a}.bind(this))}};a.extend(b.prototype,{saveRevision:function(a){(void 0===a||a===!0)&&this.revisions.push({text:this.$el.val(),time:Date.now()})},lastRevision:function(){return this.revisions[this.revisions.length-1]},popRevision:function(a,b){var c,d=a?this.undoneRevisions:this.revisions;if(0!==d.length)return c=b?d.splice(b)[0]:d.pop(),(a?this.revisions:this.undoneRevisions).push(c),this.revisions.length>0?this.$el.val(this.lastRevision().text):this.$el.val(""),c},getRevision:function(a){return this.revisions[parseInt(a,10)-1]},goToRevision:function(a){if(a=parseInt(a,10),0>a||a>this.revisions.length)throw new Error("Attempting to go to an invalid revision number");return this.popRevision(!1,a)},undo:function(){return this.popRevision()},redo:function(){return this.popRevision(!0)},diff:function(a,b){if(!this.diffFunction)throw new Error("In order to use RevisionTracker#diff, a diffFunction must be supplied as an option");var c=this.getRevision(a)||{text:""},d=this.getRevision(b);return d?this.diffFunction(c.text,d.text):void 0}});var c=function(a){var b=a.data("revisionTracker");if(!b)throw new Error("Element is currently not tracking revisions");return b},d={init:function(a){var c=new b(this,a);return this.data("revisionTracker",c),this},revisions:function(){return c(this).revisions.map(function(a,b){return a.revisionNumber=b+1,a})},save:function(){var a=c(this),b=a.lastRevision();return b&&b.text===this.val()?b:c(this).saveRevision()},getRevision:function(a){return c(this).getRevision(a)},undo:function(){return c(this).undo()},redo:function(){return c(this).redo()},goToRevision:function(a){return c(this).goToRevision(a)},getDiff:function(a,b){return c(this).diff(a,b)}};a.fn.revisionTracker=function(b){var c=arguments,e="string"==typeof b,f=this.filter("textarea,input").map(function(){if(void 0===b||"object"==typeof b)return d.init.call(a(this),b);if(e&&d[b])return d[b].apply(a(this),Array.prototype.slice.call(c,1));throw new Error("Calling method that is not part of the API")});return e?0===b.indexOf("get")?f[0]:f.toArray():f}}(jQuery);